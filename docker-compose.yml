# docker-compose.yaml
version: '3'

services:
  tsd:
    build:
      context: ./docker/php/
    image: tsdsystem-app
    container_name: app
    tty: true
    ports:
      - "8000:80"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: "${DB_HOST}"
      DB_USER: "${TSD_DB_USER}"
      DB_PASSWORD: "${TSD_DB_PASSWORD}"
      DB_NAME: "${TSD_DB}"
      DB_PORT: "${DB_PORT}"
      SERVER_KEY: "${SERVER_KEY}"
      APP_ALLOWED_HOSTS: "${APP_ALLOWED_HOSTS}"
      ADMIN_ID: "${ADMIN_ID}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      ADMIN_EMAIL: "${ADMIN_EMAIL}"
      ENV: "${ENV}"
      EPSG_DEGREE: "${EPSG_DEGREE}"
      EPSG_M: "${EPSG_M}"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_USERNAME: "${SMTP_USERNAME}"
      SMTP_PASSWORD: "${SMTP_PASSWORD}"
      SMTP_AUTH: "${SMTP_AUTH}"
      SMTP_SECURE: "${SMTP_SECURE}"
      SMTP_FROM_ADDRESS: "${SMTP_FROM_ADDRESS}"
      SMTP_FROM_NAME: "${SMTP_FROM_NAME}"
      REG_PATTERN: "${REG_PATTERN}"
    healthcheck:
      test:
        ["CMD", "curl", "--fail", "http://localhost/tsdws/version"]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    working_dir: /var/www/html/tsdws
    volumes:
      - ./src:/var/www/html
  db:
    build:
      context: ./docker/timescale/
    container_name: db
    restart: unless-stopped
    environment:
      - "POSTGRES_USER=${DB_USER}"
      - "POSTGRES_PASSWORD=${DB_PASSWORD}"
      - "POSTGRES_DB=${DB_USER}"
      - "TSD_DB_USER=${TSD_DB_USER}"
      - "TSD_DB_PASSWORD=${TSD_DB_PASSWORD}"
      - "TSD_DB=${TSD_DB}"
    ports:
      - "5432:5432"
    healthcheck:
      test:
        ["CMD", "pg_isready", "-h", "localhost", "-U", "${POSTGRES_USER}"]
      start_period: 15s
      interval: 15s
      timeout: 15s
      retries: 10
    volumes:
      - "db_data:/home/postgres/pgdata/data"
volumes:
  db_data:
